{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Desktop\\\\Notes\\\\my_note\\\\src\\\\Context\\\\NoteState.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport NoteContext from \"./NoteCotext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NoteState = props => {\n  _s();\n  //host Name\n  const host = \"https://notebackend-xg93.onrender.com\";\n  const [allNote, setAllnote] = useState([]);\n  const [LoggedUser, setLoggedUser] = useState(false);\n\n  // ==>  Api 1 Fetch all not for spacific user\n\n  const getAllNotes = async () => {\n    const response = await fetch(`${host}/api/note/fetchallnotes`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"token\": localStorage.getItem(\"token\")\n      }\n    });\n    const json = await response.json();\n    // console.log( json );\n    setAllnote(json);\n  };\n\n  // ==> API - 2 add new Note\n\n  const addNote = async (title, description, tag) => {\n    const response = await fetch(`${host}/api/note/addnote`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"token\": localStorage.getItem(\"token\")\n      },\n      body: JSON.stringify({\n        title,\n        description,\n        tag\n      })\n    });\n    const json = await response.json();\n    console.log(json);\n    // return response.json();\n  };\n\n  // API 3 = Delete specific Note\n\n  const deletNote = async id => {\n    // Api call\n    const response = await fetch(`${host}/api/note/deletenote/${id}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"token\": localStorage.getItem(\"token\")\n      }\n    });\n\n    // DELET logic\n    const newNote = allNote.filter(single => {\n      return single._id !== id;\n    });\n    setAllnote(newNote);\n    const json = await response.json();\n    console.log(json);\n  };\n\n  // API - 4 All note Delete spacific user\n\n  const deleteALLNote = async () => {\n    const response = await fetch(`${host}/api/note/deleteallnotes`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"token\": localStorage.getItem(\"token\")\n      }\n    });\n    const json = await response.json();\n    console.log(json);\n    getAllNotes();\n  };\n\n  // API - 5 update note\n\n  const updateNote = async note => {\n    const response = await fetch(`${host}/api/note/updatenote/${note.id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"token\": localStorage.getItem(\"token\")\n      },\n      body: JSON.stringify({\n        title: note.title,\n        description: note.description,\n        tag: note.tag\n      })\n    });\n    const json = await response.json();\n    console.log(json);\n    getAllNotes();\n  };\n  return /*#__PURE__*/_jsxDEV(NoteContext.Provider, {\n    value: {\n      LoggedUser,\n      setLoggedUser,\n      allNote,\n      setAllnote,\n      getAllNotes,\n      addNote,\n      deletNote,\n      deleteALLNote,\n      updateNote\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 9\n  }, this);\n};\n_s(NoteState, \"WnIRlWTanGGistcnYgfmtgeLek8=\");\n_c = NoteState;\nexport default NoteState;\nvar _c;\n$RefreshReg$(_c, \"NoteState\");","map":{"version":3,"names":["React","useState","NoteContext","jsxDEV","_jsxDEV","NoteState","props","_s","host","allNote","setAllnote","LoggedUser","setLoggedUser","getAllNotes","response","fetch","method","headers","localStorage","getItem","json","addNote","title","description","tag","body","JSON","stringify","console","log","deletNote","id","newNote","filter","single","_id","deleteALLNote","updateNote","note","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/admin/Desktop/Notes/my_note/src/Context/NoteState.js"],"sourcesContent":["import React,{ useState } from \"react\";\r\nimport NoteContext from \"./NoteCotext\";\r\n\r\nconst NoteState = (props) => {\r\n\r\n    //host Name\r\n    const host = \"https://notebackend-xg93.onrender.com\";\r\n\r\n    const [allNote, setAllnote] = useState([]);\r\n    const [LoggedUser, setLoggedUser] = useState(false);\r\n\r\n\r\n    // ==>  Api 1 Fetch all not for spacific user\r\n\r\n      const getAllNotes = async () => {\r\n\r\n        const response = await fetch(`${host}/api/note/fetchallnotes`, {\r\n              method: \"GET\",\r\n              headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"token\" : localStorage.getItem(\"token\")\r\n                }\r\n            });\r\n            const json = await response.json();\r\n            // console.log( json );\r\n            setAllnote( json );\r\n      }\r\n      \r\n\r\n      // ==> API - 2 add new Note\r\n\r\n          \r\n      const addNote = async ( title, description, tag ) => {\r\n          const response = await fetch(`${host}/api/note/addnote`, {\r\n            method: \"POST\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              \"token\" : localStorage.getItem(\"token\")\r\n            },\r\n            body: JSON.stringify({ title , description , tag })\r\n          });\r\n          const json = await response.json();\r\n          console.log(json)\r\n          // return response.json();\r\n      }\r\n\r\n\r\n      // API 3 = Delete specific Note\r\n\r\n    const deletNote = async (id) => {\r\n          \r\n      // Api call\r\n      const response = await fetch(`${host}/api/note/deletenote/${id}`, {\r\n          method: \"DELETE\",\r\n          headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              \"token\" : localStorage.getItem(\"token\")\r\n            },\r\n          });\r\n\r\n        // DELET logic\r\n        const newNote = allNote.filter((single) => { return single._id !== id})\r\n        setAllnote(newNote);\r\n\r\n        const json = await response.json();\r\n        console.log(json)\r\n    }\r\n\r\n\r\n    // API - 4 All note Delete spacific user\r\n\r\n    const deleteALLNote = async () => {\r\n          \r\n      const response = await fetch(`${host}/api/note/deleteallnotes`, {\r\n        method: \"DELETE\",\r\n        headers: {\r\n           \"Content-Type\": \"application/json\",\r\n           \"token\" : localStorage.getItem(\"token\")\r\n          }\r\n      });\r\n      const json = await response.json();\r\n      console.log( json );\r\n   \r\n         \r\n      getAllNotes();\r\n \r\n    }\r\n     \r\n   \r\n    // API - 5 update note\r\n\r\n    const updateNote = async ( note ) => {\r\n\r\n      const response = await fetch(`${host}/api/note/updatenote/${note.id}`, {\r\n        method: \"PUT\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"token\" : localStorage.getItem(\"token\")\r\n        },\r\n        body: JSON.stringify({ title:note.title , description:note.description , tag:note.tag })\r\n\r\n      });\r\n\r\n      const json = await response.json();\r\n      console.log(json)\r\n     \r\n      getAllNotes();\r\n    }\r\n\r\n    return(\r\n        <NoteContext.Provider value={ {LoggedUser, setLoggedUser, allNote , setAllnote , getAllNotes , addNote , deletNote , deleteALLNote , updateNote}}>\r\n            {props.children}\r\n        </NoteContext.Provider>\r\n    )\r\n}\r\n\r\nexport default NoteState;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAQ,OAAO;AACtC,OAAOC,WAAW,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,SAAS,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAEzB;EACA,MAAMC,IAAI,GAAG,uCAAuC;EAEpD,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACU,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;;EAGnD;;EAEE,MAAMY,WAAW,GAAG,MAAAA,CAAA,KAAY;IAE9B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEP,IAAK,yBAAwB,EAAE;MACzDQ,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClC,OAAO,EAAGC,YAAY,CAACC,OAAO,CAAC,OAAO;MACtC;IACJ,CAAC,CAAC;IACF,MAAMC,IAAI,GAAG,MAAMN,QAAQ,CAACM,IAAI,CAAC,CAAC;IAClC;IACAV,UAAU,CAAEU,IAAK,CAAC;EACxB,CAAC;;EAGD;;EAGA,MAAMC,OAAO,GAAG,MAAAA,CAAQC,KAAK,EAAEC,WAAW,EAAEC,GAAG,KAAM;IACjD,MAAMV,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEP,IAAK,mBAAkB,EAAE;MACvDQ,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClC,OAAO,EAAGC,YAAY,CAACC,OAAO,CAAC,OAAO;MACxC,CAAC;MACDM,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEL,KAAK;QAAGC,WAAW;QAAGC;MAAI,CAAC;IACpD,CAAC,CAAC;IACF,MAAMJ,IAAI,GAAG,MAAMN,QAAQ,CAACM,IAAI,CAAC,CAAC;IAClCQ,OAAO,CAACC,GAAG,CAACT,IAAI,CAAC;IACjB;EACJ,CAAC;;EAGD;;EAEF,MAAMU,SAAS,GAAG,MAAOC,EAAE,IAAK;IAE9B;IACA,MAAMjB,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEP,IAAK,wBAAuBuB,EAAG,EAAC,EAAE;MAC9Df,MAAM,EAAE,QAAQ;MAChBC,OAAO,EAAE;QACL,cAAc,EAAE,kBAAkB;QAClC,OAAO,EAAGC,YAAY,CAACC,OAAO,CAAC,OAAO;MACxC;IACF,CAAC,CAAC;;IAEJ;IACA,MAAMa,OAAO,GAAGvB,OAAO,CAACwB,MAAM,CAAEC,MAAM,IAAK;MAAE,OAAOA,MAAM,CAACC,GAAG,KAAKJ,EAAE;IAAA,CAAC,CAAC;IACvErB,UAAU,CAACsB,OAAO,CAAC;IAEnB,MAAMZ,IAAI,GAAG,MAAMN,QAAQ,CAACM,IAAI,CAAC,CAAC;IAClCQ,OAAO,CAACC,GAAG,CAACT,IAAI,CAAC;EACrB,CAAC;;EAGD;;EAEA,MAAMgB,aAAa,GAAG,MAAAA,CAAA,KAAY;IAEhC,MAAMtB,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEP,IAAK,0BAAyB,EAAE;MAC9DQ,MAAM,EAAE,QAAQ;MAChBC,OAAO,EAAE;QACN,cAAc,EAAE,kBAAkB;QAClC,OAAO,EAAGC,YAAY,CAACC,OAAO,CAAC,OAAO;MACvC;IACJ,CAAC,CAAC;IACF,MAAMC,IAAI,GAAG,MAAMN,QAAQ,CAACM,IAAI,CAAC,CAAC;IAClCQ,OAAO,CAACC,GAAG,CAAET,IAAK,CAAC;IAGnBP,WAAW,CAAC,CAAC;EAEf,CAAC;;EAGD;;EAEA,MAAMwB,UAAU,GAAG,MAAQC,IAAI,IAAM;IAEnC,MAAMxB,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEP,IAAK,wBAAuB8B,IAAI,CAACP,EAAG,EAAC,EAAE;MACrEf,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClC,OAAO,EAAGC,YAAY,CAACC,OAAO,CAAC,OAAO;MACxC,CAAC;MACDM,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEL,KAAK,EAACgB,IAAI,CAAChB,KAAK;QAAGC,WAAW,EAACe,IAAI,CAACf,WAAW;QAAGC,GAAG,EAACc,IAAI,CAACd;MAAI,CAAC;IAEzF,CAAC,CAAC;IAEF,MAAMJ,IAAI,GAAG,MAAMN,QAAQ,CAACM,IAAI,CAAC,CAAC;IAClCQ,OAAO,CAACC,GAAG,CAACT,IAAI,CAAC;IAEjBP,WAAW,CAAC,CAAC;EACf,CAAC;EAED,oBACIT,OAAA,CAACF,WAAW,CAACqC,QAAQ;IAACC,KAAK,EAAG;MAAC7B,UAAU;MAAEC,aAAa;MAAEH,OAAO;MAAGC,UAAU;MAAGG,WAAW;MAAGQ,OAAO;MAAGS,SAAS;MAAGM,aAAa;MAAGC;IAAU,CAAE;IAAAI,QAAA,EAC5InC,KAAK,CAACmC;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAE/B,CAAC;AAAAtC,EAAA,CA/GKF,SAAS;AAAAyC,EAAA,GAATzC,SAAS;AAiHf,eAAeA,SAAS;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}